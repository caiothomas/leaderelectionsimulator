body {
    font-family: Arial, Verdana, sans-serif;
    font-size: 14px;
    text-align:justify;
    overflow-y: scroll;
}

.circle {    
    border-radius: 50%;
    width: 60px;
    height: 60px;
    text-align: center;        
    background-color: red;
    display: inline-block;
    position: absolute;    
}

.circle-msg {
    height: 20px;
    width: 20px;
    border-radius: 50%;
    background: dodgerblue;
    position: absolute;    
}

.circle.big {
    width: 200px;
    height: 200px;
    background-color: white;
    margin: 50px 50px;
    border: 1px dashed black;
    z-index: -10;
    display: block;
}

.link:link, .link:active, .link:visited {
    background-color: red;    
    cursor: pointer;
}
.link:hover {
    background-color: indianred;
    cursor: pointer;
}

.color-blue{
    background-color: dodgerblue !important;
}

.color-leader{
    background-color: chartreuse !important;
}

 
.one {
    left: -25px;
    top: 65px;    
}

.two {
    top: -20px;
    left: 70px;
}

.three {
    right: -30px;
    top: 60px;
}

.four {
    bottom: -20px;
    left: 70px;    
}



@keyframes rotBC {
  0% {
    transform:translate(-15px, -15px);
  }
  50% {
    transform:translate(60px, 0px);
  }  
  100% {
    transform:translate(90px, 50px);
  } 
}

@keyframes rotCD {
  0% {
    transform:translate(90px, 60px);
  }
  50% {
    transform:translate(67px, 150px);
  }  
    
  100% {
    transform:translate(0px, 190px);
  }      
}

@keyframes rotDA {
  0% {
    transform:translate(0px, 195px);
  }
  50% {
    transform:translate(-100px, 150px);
  }  
    
  100% {
    transform:translate(-120px, 90px);
  }      
}

@keyframes rotAB {
  0% {
    transform:translate(-110px, 70px);
  }
  50% {
    transform:translate(-60px, -15px);
  }  
  100% {
    transform:translate(-30px, -5px);
  }      
}

.mensage-a {    
    width: 20px;
    height: 20px;    
    background-color: dodgerblue;        
    animation: rotAB 2s linear;    
}

.mensage-b {    
    width: 20px;
    height: 20px;    
    background-color: dodgerblue;    
    animation: rotBC 2s  linear;    
}

.mensage-c {    
    width: 20px;
    height: 20px;    
    background-color: dodgerblue;    
    animation: rotCD 2s  linear;    
}

.mensage-d {    
    width: 20px;
    height: 20px;    
    background-color: dodgerblue;   
    animation: rotDA 2s  linear;    
}

.overlay{
  position: absolute;
  width: 50px;
  height: 50px;
  background-color: white;
  border-radius: 50%;
  margin-left: 5px;
  margin-top: 5px;
  text-align: center;
  line-height: 3;
}

 .spinner {
    background: red;
    border-radius: 50%;
    width: 60px;
    height: 60px;
    position: absolute;
    border-style: 0px;
    border-color: darkred;
  }
  
.time-ani-b {
    animation: mask-two 5s linear infinite;
    animation: mask 5s linear infinite;
    animation: inner 5s linear infinite;
}

.time-ani-c {
    animation: mask-two 7s linear infinite;
    animation: mask 7s linear infinite;
    animation: inner 7s linear infinite;
}

.time-ani-d {
    animation: mask-two 10s linear infinite;
    animation: mask 10s linear infinite;
    animation: inner 10s linear infinite;
}

.time-ani-a {
    animation: mask-two 6s linear infinite;
    animation: mask 6s linear infinite;
    animation: inner 6s linear infinite;
}

  .spinner-inner {
    position: absolute;
    top: 0;
    left: 0;
    background: transparent;
    border-width: 30px;
    width: 0;
    height: 0;
    border-style: solid;
    border-top-color: darkred;
    border-right-color: transparent;
    border-left-color: transparent;
    border-bottom-color: transparent;
    transform: rotate(-30deg);
  }
  
  .spinner-mask {
    position: absolute;
    top: 1px;
    left: 0px;
    background: transparent;
    border-width: 30px;
    width: 0;
    height: 0;
    border-style: solid;
    border-top-color: red;
    border-right-color: transparent;
    border-left-color: transparent;
    border-bottom-color: transparent;
    transform: rotate(-30deg);
  }

  .spinner-mask-two {
    display: block;
    position: absolute;
    top: 1px;
    left: -1px;
    background: transparent;
    border-width: 30px;
    width: 0;
    height: 0;
    border-style: solid;
    border-top-color: darkred;
    border-right-color: transparent;
    border-left-color: transparent;
    border-bottom-color: transparent;
    transform: rotate(30deg);
  }
  
  @-webkit-keyframes inner {
    0% {
      transform: rotate(-30deg);
    }
    25% {border-left-color:transparent;}
    26% {
      border-left-color:  darkred;
    }
    50% {border-bottom-color:transparent;}
    51% {
      border-bottom-color:  darkred;
    }
    75% {border-right-color:transparent;}
    76% {
      border-right-color:  darkred;
    }
    100% {
      transform: rotate(315deg);
      border-left-color:  darkred;
      border-bottom-color:  darkred;
      border-right-color: darkred;
    }
  }
  
   @-webkit-keyframes mask {
    0% {
      transform: rotate(-30deg);
    }
    75% {
      transform: rotate(-30deg);
    }
    100% {
      transform: rotate(30deg);
    }
  }
  
  @-webkit-keyframes mask-two {
    0% {
      opacity: 0;
    }
    75% {
      opacity: 0;
    }
    76% {
      opacity: 1;
    }
  }
  

/*
 * Gridism
 * A simple, responsive, and handy CSS grid by @cobyism
 * https://github.com/cobyism/gridism
 */

/* Preserve some sanity */
.grid,
.unit {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

/* Set up some rules to govern the grid */
.grid {
  display: block;
  clear: both;
}
.grid .unit {
  float: left;
  width: 100%;
  padding: 10px;
}

/* This ensures the outer gutters are equal to the (doubled) inner gutters. */
.grid .unit:first-child { padding-left: 20px; }
.grid .unit:last-child { padding-right: 20px; }

/* Nested grids already have padding though, so let’s nuke it */
.unit .unit:first-child { padding-left: 0; }
.unit .unit:last-child { padding-right: 0; }
.unit .grid:first-child > .unit { padding-top: 0; }
.unit .grid:last-child > .unit { padding-bottom: 0; }

/* Let people nuke the gutters/padding completely in a couple of ways */
.no-gutters .unit,
.unit.no-gutters {
  padding: 0 !important;
}

/* Wrapping at a maximum width is optional */
.wrap .grid,
.grid.wrap {
  max-width: 978px;
  margin: 0 auto;
}

/* Width classes also have shorthand versions numbered as fractions
 * For example: for a grid unit 1/3 (one third) of the parent width,
 * simply apply class="w-1-3" to the element. */
.grid .whole,          .grid .w-1-1 { width: 100%; }
.grid .half,           .grid .w-1-2 { width: 50%; }
.grid .one-third,      .grid .w-1-3 { width: 33.3332%; }
.grid .two-thirds,     .grid .w-2-3 { width: 66.6665%; }
.grid .one-quarter,
.grid .one-fourth,     .grid .w-1-4 { width: 25%; }
.grid .three-quarters,
.grid .three-fourths,  .grid .w-3-4 { width: 75%; }
.grid .one-fifth,      .grid .w-1-5 { width: 20%; }
.grid .two-fifths,     .grid .w-2-5 { width: 40%; }
.grid .three-fifths,   .grid .w-3-5 { width: 60%; }
.grid .four-fifths,    .grid .w-4-5 { width: 80%; }
.grid .golden-small,   .grid .w-g-s { width: 38.2716%; } /* Golden section: smaller piece */
.grid .golden-large,   .grid .w-g-l { width: 61.7283%; } /* Golden section: larger piece */

/* Clearfix after every .grid */
.grid {
  *zoom: 1;
}
.grid:before {
  display: table;
  content: "";
  line-height: 0;
}
.grid:after {
  clear: both;
}

/* Utility classes */
.align-center { text-align: center; }
.align-left   { text-align: left; }
.align-right  { text-align: right; }
.pull-left    { float: left; }
.pull-right   { float: right; }

/* A property for a better rendering of images in units: in
   this way bigger pictures are just resized if the unit
   becomes smaller */
.unit img {
  max-width: 100%;
}

/* Hide elements using this class by default */
.only-on-mobiles {
  display: none !important;
}

/* Responsive Stuff */
@media screen and (max-width: 568px) {
  /* Stack anything that isn’t full-width on smaller screens 
     and doesn't provide the no-stacking-on-mobiles class */
  .grid:not(.no-stacking-on-mobiles) > .unit {
    width: 100% !important;
    padding-left: 20px;
    padding-right: 20px;
  }
  .unit .grid .unit {
    padding-left: 0px;
    padding-right: 0px;
  }

  /* Sometimes, you just want to be different on small screens */
  .center-on-mobiles {
    text-align: center !important;
  }
  .hide-on-mobiles {
    display: none !important;
  }
  .only-on-mobiles {
    display: block !important;
  }
}

/* Expand the wrap a bit further on larger screens */
@media screen and (min-width: 1180px) {
  .wider .grid,
  .grid.wider {
    max-width: 1180px;
    margin: 0 auto;
  }
}

/* PURE TABLES*/
.pure-table {
    /* Remove spacing between table cells (from Normalize.css) */
    border-collapse: collapse;
    border-spacing: 0;
    empty-cells: show;
    border: 1px solid #cbcbcb;
    text-align: center;
    width: 100%;
}

.pure-table caption {
    color: #000;
    font: italic 85%/1 arial, sans-serif;
    padding: 1em 0;
    text-align: center;
}

.pure-table td,
.pure-table th {
    border-left: 1px solid #cbcbcb;/*  inner column border */
    border-width: 0 0 0 1px;
    font-size: inherit;
    text-align: center;
    margin: 0;
    overflow: visible; /*to make ths where the title is really long work*/
    padding: 0.5em 1em; /* cell padding */
}

/* Consider removing this next declaration block, as it causes problems when
there's a rowspan on the first cell. Case added to the tests. issue#432 */
.pure-table td:first-child,
.pure-table th:first-child {
    border-left-width: 0;
}

.pure-table thead {
    background-color: #e0e0e0;
    color: #000;
    text-align: left;
    vertical-align: bottom;
}

/*
striping:
   even - #fff (white)
   odd  - #f2f2f2 (light gray)
*/
.pure-table td {
    background-color: transparent;
}
.pure-table-odd td {
    background-color: #f2f2f2;
}

/* nth-child selector for modern browsers */
.pure-table-striped tr:nth-child(2n-1) td {
    background-color: #f2f2f2;
}

/* BORDERED TABLES */
.pure-table-bordered td {
    border-bottom: 1px solid #cbcbcb;
}
.pure-table-bordered tbody > tr:last-child > td {
    border-bottom-width: 0;
}


/* HORIZONTAL BORDERED TABLES */

.pure-table-horizontal td,
.pure-table-horizontal th {
    border-width: 0 0 1px 0;
    border-bottom: 1px solid #cbcbcb;
}
.pure-table-horizontal tbody > tr:last-child > td {
    border-bottom-width: 0;
}